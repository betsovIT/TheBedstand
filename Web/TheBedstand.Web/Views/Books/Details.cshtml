@model TheBedstand.Web.ViewModels.Books.BookInfoViewModel
@using TheBedstand.Common.Helpers
@using TheBedstand.Common
@using Microsoft.AspNetCore.Identity
@using TheBedstand.Data.Models
@using TheBedstand.Services
@inject UserManager<ApplicationUser> userManager
@inject ICloudinaryService cloudinaryService

@{
    var user = await userManager.GetUserAsync(this.User);
}
<div class="container mb-2 mt-2">
    <div class="card" style="border-radius: 10px">
        <div class="card-body">
            <div class="row mb-2">
                <img class="card-img col-md-3" src="@Model.CoverUrl" />
                <div class="card-text col-md-9">
                    <h3>@Model.Title</h3>
                    <p class="text-dark font-weight-bolder">by <a href="/Authors/Details?id=@Model.Author.Id" class="text-dark font-weight-bolder">@NameHelper.GetFullName(Model.Author.PersonalName, Model.Author.Surname)</a></p>
                    <p><strong>Published on -</strong> @Model.PublishedOn.ToString("dd/MM/yyyy")</p>
                    <p><strong>ISBN - </strong>@Model.Id</p>
                    <p><strong>Pages - </strong>@(Model.PageCount != null ? Model.PageCount.ToString() : "N/A")</p>
                    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                    {
                        <div class="d-inline-block">
                            <a class="btn btn-warning" href="/Books/Edit?id=@Model.Id">Edit</a>
                            <a class="btn btn-danger" href="/Books/Delete?id=@Model.Id">Delete</a>
                        </div>
                    }
                </div>
            </div>
            <div>
                <p>
                    @Model.LongAnnotation
                </p>
            </div>
        </div>
        
    </div>
</div>

<div class="container mb-5">
    <div class="card" style="border-radius: 10px">
        <div class="card-body">
            <h4>Add Comment</h4>
            <div class="row">
                <div class="col-md-2">
                    <img src="@await cloudinaryService.GetUrlById(user.AvatarId)" class="card-img" style="max-height:200px; max-width:150px"/>
                </div>
                <div class="col-md-10">
                    <strong>
                        @user.UserName
                    </strong>
                    <div class="clearfix"></div>
                    <textarea id="commentContent" class=" border-info w-100 h-75" placeholder="Type your comment here" style="border-radius: 10px"></textarea>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary float-right" onclick="postComment()">Post</button>
        </div>
    </div>
</div>


<div id="allComments">
    @foreach (var comment in Model.Comments.OrderByDescending(x => x.CreatedOn))
    {
        <div id="@comment.Id" class="container mb-2">
            <div class="card" style="border-radius: 10px">
                <div class="card-body">
                    <div class="row">
                        <div class="col-2">
                            <img src="@(comment.UserAvatarUrl)" class="card-img" style="max-height:200px; max-width:150px" />
                            <p class="text-secondary text-center">
                                @(TimeDifferenceHelper.GetTimeDifference(comment.CreatedOn))
                            </p>
                        </div>
                        <div class="col-10">
                            <p>
                                <strong class="float-left">@comment.Username</strong>
                                <div class="d-inline-block float-right">                                    
                                    <a href="#" class="text-dark mx-1"><i class="fas fa-edit"></i></a>
                                    <a href="#" class="text-dark mx-1" onclick="deleteComment('@comment.Id')"><i class="fas fa-trash-alt"></i></a>
                                </div>
                                
                            </p>
                            <div class="clearfix"></div>
                            <p>@comment.Content</p>
                        </div>  
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    function postComment() {

        var commentData = { content: $("#commentContent").val(), userId: "@userManager.GetUserId(User)", bookId: "@Model.Id" };

        $.ajax({
            url: "/api/Comments",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(commentData),
            success: function (response) {

                let imageUrl = response["userAvatarUrl"];
                let content = response["content"];
                let username = response["username"];
                let createdOn = response["createdOn"];
                let commentId = response["id"];
                $("#allComments").prepend('<div id="'+ commentId +'" class="container mb-2"> <div class="card" style="border-radius: 10px"> <div class="card-body"> <div class="row"> <div class="col-2"> <img src="'+ imageUrl +'" class="card-img" style="max-height:200px; max-width:150px"/> <p class="text-secondary text-center">Now</p></div><div class="col-10"> <p> <strong class="float-left">' + username + '</strong> <div class="d-inline-block float-right"> <a href="#" class="text-dark mx-1"><i class="fas fa-edit"></i></a> <a href="#" class="text-dark mx-1" onclick="deleteComment(\'' + commentId + '\')"><i class="fas fa-trash-alt"></i></a> </div></p><div class="clearfix"></div><p>' + content + '</p></div></div></div></div></div>');
            }            
        });
        $("#commentContent").val('');
    }

    function deleteComment(htmlId) {

        var commentId = "#" + htmlId;
        var json = {id: `${htmlId}`}

        $.ajax({
            url: "/api/Comments",
            type: "DELETE",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(json), 
            success: function (response) {
                if (response == true) {
                    $(commentId).remove();
                }                
            }
        });
    }
</script>